name: Release

permissions:
  contents: write  # Allow writing to repository contents (for pushing tags)
  actions: write   # Allows triggering actions

on:
  push:
    paths:
      - ".github/workflows/main.yml"
  workflow_dispatch:

env:
  ksu: "v1.0.5"
  susfs: "v1.5.9"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      ksu_version: ${{ steps.get_ksu_version.outputs.ksu_version }}

    strategy:
      matrix:
        kernel:
          - android12-5.10
          - android13-5.10
          - android13-5.15
          - android14-5.15
          - android14-6.1
          - android15-6.6

    steps:
      - name: Initialize and Sync Kernel Source
        run: |
          sudo apt update -y && sudo apt install -y repo
          repo init --depth 1 -u https://android.googlesource.com/kernel/manifest -b common-${{ matrix.kernel }}-lts
          repo sync -c --force-sync --optimized-fetch --no-tags --no-clone-bundle --prune -j$(nproc --all)

      - name: Add KernelSU ${{ env.ksu }}
        working-directory: common
        run: curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s ${{ env.ksu }}

      - name: Get KernelSU Version
        id: get_ksu_version
        working-directory: common/KernelSU
        run: echo "ksu_version=$(expr $(git rev-list --count HEAD) "+" 10200)" >> $GITHUB_OUTPUT

      - name: Checkout SUSFS ${{ env.susfs }}
        run: |
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ matrix.kernel }}
          cd susfs4ksu
          git checkout $(git log --grep="Bump version to ${{ env.susfs }}" --format="%H" -1)

      - name: Apply SUSFS Patches
        working-directory: common
        run: |
          cp ../susfs4ksu/kernel_patches/fs/* fs
          cp ../susfs4ksu/kernel_patches/include/linux/* include/linux
          patch -p1 < ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ matrix.kernel }}.patch
          cd KernelSU
          patch -p1 < ../../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch

      - name: Fix Wifi/Bluetooth for some devices
        working-directory: common
        run: |
          if [ -f BUILD.bazel ]; then
            sed -i '/^[[:space:]]*"protected_exports_list"[[:space:]]*:[[:space:]]*"android\/abi_gki_protected_exports_aarch64",$/d' BUILD.bazel
          fi
          rm android/abi_gki_protected_exports_* || echo "No protected exports!"

      - name: Remove -dirty from uname
        run: |
          sed -i 's| -dirty||g' common/scripts/setlocalversion
          sed -i 's| -dirty||g' build/kernel/kleaf/workspace_status_stamp.py || echo "No workspace_status_stamp.py!"

      - name: Compile Kernel using build.sh
        if: matrix.kernel == 'android12-5.10' || matrix.kernel == 'android13-5.10' || matrix.kernel == 'android13-5.15'
        run: LTO=thin BUILD_CONFIG=common/build.config.gki.aarch64 build/build.sh

      - name: Compile Kernel using bazel
        if: matrix.kernel == 'android14-5.15' || matrix.kernel == 'android14-6.1' || matrix.kernel == 'android15-6.6'
        run: tools/bazel run --disk_cache=/home/runner/.cache/bazel --config=fast --config=stamp --lto=thin //common:kernel_aarch64_dist -- --dist_dir="out/${{ matrix.kernel }}/dist"

      - name: Copy Kernel Image
        run: mkdir artifacts && cp out/${{ matrix.kernel }}/dist/Image artifacts/${{ matrix.kernel }}_Image

      - name: Copy Boot Images
        working-directory: artifacts
        if: matrix.kernel != 'android12-5.10'
        run: for boot_format in boot boot-gz boot-lz4; do cp ../out/${{ matrix.kernel }}/dist/${boot_format}.img ${{ matrix.kernel }}_${boot_format}.img; done

      - name: Checkout AnyKernel
        uses: actions/checkout@v4
        with:
          repository: Kernel-SU/AnyKernel3
          path: AnyKernel

      - name: Make AnyKernel Zip
        working-directory: AnyKernel
        run: cp ../out/${{ matrix.kernel }}/dist/Image . && zip -r ../artifacts/${{ matrix.kernel }}_AnyKernel.zip .

      - name: Show Output Files
        run: ls artifacts out/${{ matrix.kernel }}/dist

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.kernel }}
          path: artifacts

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Set Release Tag and Notes
        run: |
          cat << EOF > release_notes.md

          Links:
          -> [KernelSU Manager](https://github.com/tiann/KernelSU/releases/download/${{ env.ksu }}/KernelSU_${{ env.ksu }}_${{ needs.build.outputs.ksu_version }}-release.apk)
          -> [Kernel Flasher](https://github.com/fatalcoder524/KernelFlasher)
          -> [SUSFS Module](https://github.com/sidex15/susfs4ksu-module)

          Notes:
          -> Kernels are built on stable release tag for KernelSU and SUSFS
          -> Flash SUSFS Module and make sure SUS SU is enabled
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: KernelSU ${{ env.ksu }} and SUSFS ${{ env.susfs }}
          tag_name: ${{ env.ksu }}-${{ env.susfs }}
          body_path: release_notes.md

      - name: Upload Release Assets
        run: |
          for file in $(find artifacts -type f); do
            echo "Uploading ${file}..."
            gh release upload "${{ env.ksu }}-${{ env.susfs }}" "${file}"
          done
        env:
          GH_TOKEN: ${{ github.token }}
